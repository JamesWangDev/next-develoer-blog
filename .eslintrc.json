{
  "extends": [
    "next/core-web-vitals",
    // "@bpsmart/react",
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "rules": {
    "camelcase": "error",
    "no-return-await": "error",
    "no-use-before-define": "error",
    "no-var": "error",
    "no-console": "error",
    "no-undef": "error",
    "no-unused-vars": "error",
    "no-useless-return": "error",
    "no-useless-concat": "error",
    "no-useless-catch": "error",
    "no-useless-constructor": "error",
    "prefer-template": "error",
    "prefer-object-spread": "error",
    "no-unneeded-ternary": [
      "error",
      {
        "defaultAssignment": false
      }
    ],
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 1,
        "maxEOF": 1,
        "maxBOF": 1
      }
    ],
    "func-style": [
      "error",
      "expression",
      {
        "allowArrowFunctions": true
      }
    ],
    "import/no-extraneous-dependencies": [
      "warn",
      {
        "devDependencies": ["*.test.js"]
      }
    ],
    "semi": ["error", "always"],
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "always",
        "named": "never",
        "asyncArrow": "always"
      }
    ],
    "comma-dangle": [
      "error",
      {
        "arrays": "always-multiline",
        "objects": "always-multiline",
        "imports": "never",
        "exports": "never",
        "functions": "never"
      }
    ],
    "consistent-return": [
      "error",
      {
        "treatUndefinedAsUnspecified": true
      }
    ],
    "no-underscore-dangle": [
      "error",
      {
        "allow": ["_id"],
        "enforceInMethodNames": true
      }
    ],
    "newline-per-chained-call": [
      "error",
      {
        "ignoreChainWithDepth": 2
      }
    ],
    "object-property-newline": [
      "error",
      {
        "allowAllPropertiesOnSameLine": true
      }
    ],
    "no-empty": [
      "error",
      {
        "allowEmptyCatch": true
      }
    ],
    "prefer-destructuring": [
      "error",
      {
        "array": true,
        "object": true
      },
      {
        "enforceForRenamedProperties": false
      }
    ],
    "operator-linebreak": ["error", "before"],
    "multiline-ternary": ["error", "always-multiline"],
    "quotes": [
      "error",
      "single",
      {
        "allowTemplateLiterals": false
      }
    ],
    "object-shorthand": ["error", "always"],
    "object-curly-spacing": ["error", "always"],
    "array-bracket-spacing": ["error", "never"],
    "space-before-blocks": "error",
    "template-curly-spacing": ["error", "never"],
    "max-len": [
      "error",
      {
        "code": 100,
        "comments": 92,
        "ignoreUrls": true,
        "ignoreRegExpLiterals": true
      }
    ],
    "max-lines": [
      "error",
      {
        "max": 260,
        "skipBlankLines": true
      }
    ],
    "max-lines-per-function": [
      "error",
      {
        "max": 60,
        "skipBlankLines": true,
        "IIFEs": true
      }
    ],
    "max-classes-per-file": ["error", 1],
    "max-statements-per-line": [
      "error",
      {
        "max": 1
      }
    ],
    "max-depth": ["error", 4],
    "max-nested-callbacks": ["error", 3],
    "max-params": ["error", 4],
    "max-statements": ["error", 18],
    "arrow-parens": [
      "error",
      "always",
      {
        "requireForBlockBody": true
      }
    ],
    "max-lines-per-function": "off",
    "max-statements": "off",
    "react/jsx-filename-extension": [
      "warn",
      {
        "extensions": [".js", ".jsx"]
      }
    ],
    "react/jsx-curly-brace-presence": [
      "error",
      {
        "props": "always"
      }
    ],
    "react/no-unsafe": "off",
    "react/display-name": "error",
    "react/jsx-key": "error",
    "react/jsx-no-comment-textnodes": "error",
    "react/jsx-no-duplicate-props": "error",
    "react/jsx-no-target-blank": "warn",
    "react/jsx-no-undef": "error",
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error",
    "react/no-children-prop": "error",
    "react/no-danger-with-children": "error",
    "react/no-deprecated": "error",
    "react/no-direct-mutation-state": "error",
    "react/no-find-dom-node": "error",
    "react/no-is-mounted": "error",
    "react/no-render-return-value": "error",
    "react/no-string-refs": "error",
    "react/no-unescaped-entities": "error",
    "react/no-unknown-property": "error",
    "react/prop-types": "error",
    "react/react-in-jsx-scope": "error",
    "react/require-render-return": "error",
    "indent": "off",
    "react/jsx-indent": [
      2,
      2,
      {
        "indentLogicalExpressions": true
      }
    ],
    "react/jsx-indent-props": [2, "first"],
    "import/no-extraneous-dependencies": "off",
    "quotes": [
      "error",
      "single",
      {
        "avoidEscape": true
      }
    ],
    "max-lines": ["error", 300],
    "max-params": ["error", 6],
    "operator-linebreak": [
      "error",
      "after",
      {
        "overrides": {
          "?": "before",
          ":": "before"
        }
      }
    ],
    "multiline-ternary": "off",
    "no-use-before-define": "off",
    "object-curly-spacing": ["error", "always"],
    "array-bracket-spacing": ["error", "never"],
    "space-in-parens": ["error", "never"],
    "template-curly-spacing": "off",
    "newline-per-chained-call": "off",
    "react/prop-types": "off",
    "react/react-in-jsx-scope": "off",
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [".jsx", ".tsx"]
      }
    ],
    "comma-spacing": [
      "error",
      {
        "before": false,
        "after": true
      }
    ],
    "comma-dangle": [
      "error",
      {
        "arrays": "always-multiline",
        "objects": "always-multiline",
        "imports": "always-multiline",
        "exports": "always-multiline",
        "functions": "always-multiline"
      }
    ],
    "import/order": [
      "warn",
      {
        "groups": ["object", "builtin", "external", "internal", "parent", "sibling", "index"],
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        },
        "newlines-between": "always"
      }
    ],
    "@typescript-eslint/no-inferrable-types": [
      "error",
      {
        "ignoreParameters": true,
        "ignoreProperties": true
      }
    ],
    "@typescript-eslint/no-use-before-define": ["error"],
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn"
  }
}
